#!/bin/bash
LOGLEVEL="AS_LOG_LEVEL_OFF"

parse_args () {
    while [[ $# > 1 ]]
    do
        key="$1"
        shift

        case $key in
            -l|--loglevel)
                case "$1" in
                    TRACE|trace)
                        LOGLEVEL="AS_LOG_LEVEL_TRACE"
                        ;;
                    DEBUG|debug)
                        LOGLEVEL="AS_LOG_LEVEL_DEBUG"
                        ;;
                    INFO|info)
                        LOGLEVEL="AS_LOG_LEVEL_INFO"
                        ;;
                    WARN|warn)
                        LOGLEVEL="AS_LOG_LEVEL_WARN"
                        ;;
                    ERROR|error)
                        LOGLEVEL="AS_LOG_LEVEL_ERROR"
                        ;;
                    OFF|off)
                        LOGLEVEL="AS_LOG_LEVEL_OFF"
                        ;;
                    *)
                        echo "Usage:"
                        echo "build -l|--loglevel <ONE AMONG: TRACE, DEBUG, INFO, WARN, ERROR, OFF> [-h|--help]"
                        exit 1
                        ;;
                esac
                shift
                ;;
            -h|--help)
                echo "Usage:"
                echo "build -l|--loglevel <ONE AMONG: TRACE, DEBUG, INFO, WARN, ERROR, OFF> [-h|--help]"
                shift
                ;;
            --default)
                echo "Using default Loglevel."
                LOGLEVEL="AS_LOG_LEVEL_OFF"
                shift
                ;;
            *)
                echo "Usage:"
                echo "build -l|--loglevel <ONE AMONG: TRACE, DEBUG, INFO, WARN, ERROR, OFF> [-h|--help]"
                exit 1
                ;;
        esac
    done
}

if [ -f Makefile ]; then
  make clean
fi
parse_args $@
phpize
./configure "CFLAGS=-g -O3" --enable-aerospike

OS=`uname`
#INCLUDE_LUA_5_1=/usr/include/lua5.1
#if [ -d $INCLUDE_LUA_5_1 ] ; then
#  LUA_SUFFIX=5.1
#fi

CFLAGS="-g -D__AEROSPIKE_PHP_CLIENT_LOG_LEVEL__=${LOGLEVEL}"

#LDFLAGS="-L$CLIENTREPO_3X/lib -laerospike -llua$LUA_SUFFIX"
LDFLAGS="-L$CLIENTREPO_3X/lib -laerospike"

if [ $OS = "Darwin" ] ; then
    LDFLAGS="$LDFLAGS -lcrypto"
else
    # Find and add the static OpenSSL "crypto" library.
    if [ -e /usr/local/lib/libcrypto.a ] ; then
        LIBCRYPTO="-L/usr/local/lib -lcrypto"
    else
        if [ -e /usr/local/ssl/lib/libcrypto.a ] ; then
            LIBCRYPTO="-L/usr/local/ssl/lib -lcrypto"
        else
            if [ -e /usr/lib64/libcrypto.a ] ; then
                LIBCRYPTO="-L/usr/lib64 -lcrypto"
            else
                if [ -e /usr/lib/x86_64-linux-gnu/libcrypto.a ] ; then
                    LIBCRYPTO="-L/usr/lib/x86_64-linux-gnu -lcrypto"
                else
                    if [ -e /usr/lib/libcrypto.a ] ; then
                        LIBCRYPTO="-L/usr/lib -lcrypto"
                    fi
                fi
            fi
        fi
    fi
    LDFLAGS="$LDFLAGS $LIBCRYPTO -lrt"
fi

make clean all "CFLAGS=$CFLAGS" "EXTRA_INCLUDES+=-I$CLIENTREPO_3X/include" "EXTRA_LDFLAGS=$LDFLAGS"

test-cleanup
